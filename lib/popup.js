// Generated by CoffeeScript 1.4.0
(function() {
  var dom, getCurrentZoomLevel;

  dom = {
    zoomInButton: $('.zoomInButton'),
    zoomOutButton: $('.zoomOutButton'),
    zoomResetButton: $('.zoomResetButton'),
    currentZoom: $('.currentZoom'),
    optionsLink: $('.optionsLink'),
    zoomBox: $('.zoomBox'),
    errorMsgBox: $('.errorMsgBox')
  };

  getCurrentZoomLevel = function() {
    return chrome.tabs.executeScript({
      code: "util.getFromLocalStorage('zoomLevel');"
    }, function(data) {
      if (data != null) {
        data = data[0] || 0;
        return dom.currentZoom.text("" + ((Math.round(data * 10) * 10 + 100).toFixed()) + "%");
      } else {
        dom.zoomBox.hide();
        return dom.errorMsgBox.removeClass('hidden');
      }
    });
  };

  _.each(['in', 'out', 'reset'], function(type) {
    return dom["zoom" + (util.capitalize(type)) + "Button"].click(function() {
      return chrome.extension.sendMessage({
        key: util.KEYS["ZOOM_" + (type.toUpperCase()) + "_KEY"]
      }, function(res) {
        return chrome.tabs.executeScript({
          code: "Mousetrap.trigger('" + res.key + "');"
        }, function() {
          return getCurrentZoomLevel();
        });
      });
    });
  });

  getCurrentZoomLevel();

  dom.optionsLink.click(function() {
    var optionsUrl;
    optionsUrl = chrome.extension.getURL('lib/options.html');
    return chrome.tabs.query({}, function(extensionTabs) {
      var found, i;
      found = false;
      i = 0;
      while (i < extensionTabs.length) {
        if (optionsUrl === extensionTabs[i].url) {
          found = true;
          chrome.tabs.update(extensionTabs[i].id, {
            selected: true
          });
        }
        i++;
      }
      if (!found) {
        return chrome.tabs.create({
          url: optionsUrl
        });
      }
    });
  });

}).call(this);
